- title: onespan-sign-node
  link: "https://github.com/getbreathelife/onespan-sign-node"
  description: >-
    This is a work-in-progress NodeJS SDK for the [https://www.onespan.com/products/electronic-signature](OneSpan Sign Electronic Signature)
    service.

- title: Prettier Import Sorter
  link: "https://www.npmjs.com/package/@breathelife/prettier-plugin-sort-imports"
  description: >-
    This is a fork of another import sorting plugin. The original plugin doesn't satisfy our use case within the company,
    so I forked the repository and rewrote the sorting logic to fit our internal use case.
    
    This plugin is publicly available on npmjs.

- title: Go Snake
  imagePath: "/images/projects/go-snake.png"
  link: "https://github.com/hawschiat/go-snake"
  description: >-
    A small challenge I had over a weekend while learning Go. This is a terminal-based game that prints out "graphics"
    using only ASCII characters.

- title: SAQ Inventory Scrapper
  imagePath: "/images/projects/saqs-screenshot.png"
  link: "https://github.com/hawschiat/saq-inventory-scraper"
  description: >-
    My friend [Mike](https://www.linkedin.com/in/michael-di-genova-732b3913b/) approached me in July 2018 asking me if there's an easy way to scrape inventory data across all branches on [SAQ's website](https://www.saq.com/en/). Since SAQ doesn't provide any public API for us to query data from, I decided to write a scraper to pull data from the website directly.


    Initially, only a portion of data is loaded. Subsequent data can only be fetched after clicking a specific button. Using Selenium ChromeDriver, I managed to automate that process and fetch the data that he needs!


    This project was written using Kotlin. It also provides a command-line user interface to input parameters such as the web URL to fetch the data from.


    P.S. If you like vodka, be sure to check out [Prose Vodka](https://www.prosevodka.com/). It is the first pink, potato-based vodka in the world! ;)

- title: FlashPoint
  imagePath: "/images/projects/flashpoint_banner.jpg"
  link: "https://github.com/COMP361/f2018-group10"
  description: >-
    Collaborated with 4 other people to develop a video game using [PyGame](https://pygame.org) and other Python libraries, based on a board game of the same name.

    Some of the things I did include:

    - Authored customizable UI components using low-level drawing functions provided by pyGames, allowing my teammates to create user interfaces easily.

    - Implemented a client-server architecture for the game alongside a team-mate.

- title: Bull & Bear Media Fund Package
  imagePath: "/images/projects/b&b_media_fund.png"
  link: "http://bullandbearmcgill.com/media-fund-2018/index.html"
  description: >-
    A tiny project I had when I was the Managing Web Editor of [The Bull & Bear](http://bullandbearmcgill.com) to raise funds for the organization. It was designed using jQuery, [AOS](https://michalsnik.github.io/aos/) and [Rellax](https://github.com/dixonandmoe/rellax) library.

- title: AnimaCard Builder
  imagePath: "/images/projects/animacard_builder.jpg"
  link: ""
  description: >-
    This was the project I did with my friend [Francis](https://github.com/francis-piche) during McHacks 2018. It was my first time experimenting with HTML canvas and interactive JavaScript. Despite being beginners, we managed to complete several features such as drag-and-drop and animated sprites.


    This project got me really interested in Javascript and pushed me to self-learn it on my own!
