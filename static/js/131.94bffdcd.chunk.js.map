{"version":3,"file":"static/js/131.94bffdcd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","/**\n * Specifically match against false here as incomplete versions of\n * PointerEvents in very old browser might have it set as undefined.\n */\nconst isPrimaryPointer = (event) => event.isPrimary !== false;\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? (event) => isPrimaryPointer(event) && listener(event)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction isMouseEvent(event) {\n    return event.type !== \"pen\" && event.type !== \"touch\";\n}\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","animationState","animateChanges","notify","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","useEffect","isPrimaryPointer","event","isPrimary","extractEventInfo","pointType","point","wrapHandler","shouldFilterPrimaryPointer","listener","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","isMouseEvent","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","env","warnOnce","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","window","useUnmountEffect","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","index","splice","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","delta","frameData","timestamp","sync","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","add","eventManagers","clear","passiveEffect","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","cancel","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","cancelSync","driverControls","latest","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","setWithVelocity","timeout","performance","now","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","_superPropBase","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}